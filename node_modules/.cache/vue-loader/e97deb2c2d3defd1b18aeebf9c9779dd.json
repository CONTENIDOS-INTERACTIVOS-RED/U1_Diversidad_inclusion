{"remainingRequest":"/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/pug-plain-loader/index.js!/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/src/views/curso/Tema1.vue?vue&type=template&id=26a32c89&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/src/views/curso/Tema1.vue","mtime":1758485384371},{"path":"/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Diversidad_inclusion/U1_Diversidad_inclusion/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}